name: Tests

on: workflow_call

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    if: ${{ !contains(github.event.head_commit.message, '#skip-ci') }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        php: [ '8.1' ]
        dependency-version: [ prefer-stable ]

    name: Code Style

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache PHP dependencies
        uses: actions/cache@v3
        with:
          path: '**/vendor'
          key: ${{ runner.os }}-vendor-cache-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-vendor-cache-

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache/files
          key: composer-${{ runner.os }}-php-${{ matrix.php }}-${{ hashFiles('composer.json') }}

      - name: Validate Composer configuration file
        run: composer validate --strict

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          coverage: none
        env:
          COMPOSER_TOKEN: ${{ github.token }}

      - name: Setup Problem Matches
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: composer update --${{ matrix.dependency-version }} --prefer-dist --no-scripts --no-interaction --no-progress --optimize-autoloader

      - name: Run PHP-CS-Fixer
        run: ./vendor/bin/php-cs-fixer fix -v --allow-risky=yes --dry-run

  unit:
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        php: [ '8.0', '8.1' ]
        dependency-version: [ prefer-lowest, prefer-stable ]

    name: Unit Tests

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache PHP dependencies
        uses: actions/cache@v3
        with:
          path: '**/vendor'
          key: ${{ runner.os }}-vendor-cache-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-vendor-cache-

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache/files
          key: composer-${{ runner.os }}-php-${{ matrix.php }}-${{ hashFiles('composer.json') }}

      - name: Validate Composer configuration file
        run: composer validate --strict

      - name: Setup PHP with PCOV
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          coverage: pcov
        env:
          COMPOSER_TOKEN: ${{ github.token }}

      - name: Setup Problem Matches
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: composer update --${{ matrix.dependency-version }} --prefer-dist --no-scripts --no-interaction --no-progress --optimize-autoloader

      - name: Unit Tests
        run: ./vendor/bin/pest --colors=always --coverage

  types:
    needs: [ lint, unit ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        php: [ '8.1' ]
        dependency-version: [ prefer-lowest, prefer-stable ]

    name: Type Tests

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache PHP dependencies
        uses: actions/cache@v3
        with:
          path: '**/vendor'
          key: ${{ runner.os }}-vendor-cache-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-vendor-cache-

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache/files
          key: composer-${{ runner.os }}-php-${{ matrix.php }}-${{ hashFiles('composer.json') }}

      - name: Validate Composer configuration file
        run: composer validate --strict

      - name: Setup PHP with PCOV
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          coverage: none
        env:
          COMPOSER_TOKEN: ${{ github.token }}

      - name: Setup Problem Matches
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: composer update --${{ matrix.dependency-version }} --prefer-dist --no-scripts --no-interaction --no-progress --optimize-autoloader

      - name: Run PHPStan
        run: ./vendor/bin/phpstan analyse --no-progress --memory-limit=-1 --ansi

  mutation:
    needs: [lint, unit, types]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        php: [ '8.1' ]
        dependency-version: [ prefer-stable ]

    name: Mutation Testing

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache PHP dependencies
        uses: actions/cache@v3
        with:
          path: '**/vendor'
          key: ${{ runner.os }}-vendor-cache-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-vendor-cache-

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache/files
          key: composer-${{ runner.os }}-php-${{ matrix.php }}-${{ hashFiles('composer.json') }}

      - name: Validate Composer configuration file
        run: composer validate --strict

      - name: Setup PHP with PCOV
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          coverage: pcov
        env:
          COMPOSER_TOKEN: ${{ github.token }}

      - name: Setup Problem Matches
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: composer update --${{ matrix.dependency-version }} --prefer-dist --no-scripts --no-interaction --no-progress --optimize-autoloader

      - name: Run Infection
        run: ./vendor/bin/infection --test-framework=pest --show-mutations
